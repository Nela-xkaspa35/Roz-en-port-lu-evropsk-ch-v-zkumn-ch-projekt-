Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> qelem
Rule 2     query -> query ELEM_SEPARATOR qelem
Rule 3     qelem -> string spec_opt
Rule 4     spec_opt -> <empty>
Rule 5     spec_opt -> SPEC_SEPARATOR string
Rule 6     string -> chars
Rule 7     string -> QUOTATION_MARK chars QUOTATION_MARK
Rule 8     chars -> char
Rule 9     chars -> chars char
Rule 10    char -> UNESCAPED
Rule 11    char -> ESCAPE QUOTATION_MARK
Rule 12    char -> ESCAPE REVERSE_SOLIDUS
Rule 13    char -> ESCAPE SPEC_SEPARATOR

Terminals, with rules where they appear

ELEM_SEPARATOR       : 2
ESCAPE               : 11 12 13
QUOTATION_MARK       : 7 7 11
REVERSE_SOLIDUS      : 12
SPEC_SEPARATOR       : 5 13
UNESCAPED            : 10
error                : 

Nonterminals, with rules where they appear

char                 : 8 9
chars                : 6 7 9
qelem                : 1 2
query                : 2 0
spec_opt             : 3
string               : 3 5

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . qelem
    (2) query -> . query ELEM_SEPARATOR qelem
    (3) qelem -> . string spec_opt
    (6) string -> . chars
    (7) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (8) chars -> . char
    (9) chars -> . chars char
    (10) char -> . UNESCAPED
    (11) char -> . ESCAPE QUOTATION_MARK
    (12) char -> . ESCAPE REVERSE_SOLIDUS
    (13) char -> . ESCAPE SPEC_SEPARATOR

    QUOTATION_MARK  shift and go to state 6
    UNESCAPED       shift and go to state 2
    ESCAPE          shift and go to state 5

    qelem                          shift and go to state 1
    chars                          shift and go to state 3
    char                           shift and go to state 4
    query                          shift and go to state 7
    string                         shift and go to state 8

state 1

    (1) query -> qelem .

    ELEM_SEPARATOR  reduce using rule 1 (query -> qelem .)
    $end            reduce using rule 1 (query -> qelem .)


state 2

    (10) char -> UNESCAPED .

    UNESCAPED       reduce using rule 10 (char -> UNESCAPED .)
    ESCAPE          reduce using rule 10 (char -> UNESCAPED .)
    ELEM_SEPARATOR  reduce using rule 10 (char -> UNESCAPED .)
    $end            reduce using rule 10 (char -> UNESCAPED .)
    QUOTATION_MARK  reduce using rule 10 (char -> UNESCAPED .)
    SPEC_SEPARATOR  reduce using rule 10 (char -> UNESCAPED .)


state 3

    (6) string -> chars .
    (9) chars -> chars . char
    (10) char -> . UNESCAPED
    (11) char -> . ESCAPE QUOTATION_MARK
    (12) char -> . ESCAPE REVERSE_SOLIDUS
    (13) char -> . ESCAPE SPEC_SEPARATOR

    SPEC_SEPARATOR  reduce using rule 6 (string -> chars .)
    ELEM_SEPARATOR  reduce using rule 6 (string -> chars .)
    $end            reduce using rule 6 (string -> chars .)
    UNESCAPED       shift and go to state 2
    ESCAPE          shift and go to state 5

    char                           shift and go to state 9

state 4

    (8) chars -> char .

    UNESCAPED       reduce using rule 8 (chars -> char .)
    ESCAPE          reduce using rule 8 (chars -> char .)
    SPEC_SEPARATOR  reduce using rule 8 (chars -> char .)
    ELEM_SEPARATOR  reduce using rule 8 (chars -> char .)
    $end            reduce using rule 8 (chars -> char .)
    QUOTATION_MARK  reduce using rule 8 (chars -> char .)


state 5

    (11) char -> ESCAPE . QUOTATION_MARK
    (12) char -> ESCAPE . REVERSE_SOLIDUS
    (13) char -> ESCAPE . SPEC_SEPARATOR

    QUOTATION_MARK  shift and go to state 10
    REVERSE_SOLIDUS shift and go to state 12
    SPEC_SEPARATOR  shift and go to state 11


state 6

    (7) string -> QUOTATION_MARK . chars QUOTATION_MARK
    (8) chars -> . char
    (9) chars -> . chars char
    (10) char -> . UNESCAPED
    (11) char -> . ESCAPE QUOTATION_MARK
    (12) char -> . ESCAPE REVERSE_SOLIDUS
    (13) char -> . ESCAPE SPEC_SEPARATOR

    UNESCAPED       shift and go to state 2
    ESCAPE          shift and go to state 5

    char                           shift and go to state 4
    chars                          shift and go to state 13

state 7

    (0) S' -> query .
    (2) query -> query . ELEM_SEPARATOR qelem

    ELEM_SEPARATOR  shift and go to state 14


state 8

    (3) qelem -> string . spec_opt
    (4) spec_opt -> .
    (5) spec_opt -> . SPEC_SEPARATOR string

    ELEM_SEPARATOR  reduce using rule 4 (spec_opt -> .)
    $end            reduce using rule 4 (spec_opt -> .)
    SPEC_SEPARATOR  shift and go to state 15

    spec_opt                       shift and go to state 16

state 9

    (9) chars -> chars char .

    UNESCAPED       reduce using rule 9 (chars -> chars char .)
    ESCAPE          reduce using rule 9 (chars -> chars char .)
    SPEC_SEPARATOR  reduce using rule 9 (chars -> chars char .)
    ELEM_SEPARATOR  reduce using rule 9 (chars -> chars char .)
    $end            reduce using rule 9 (chars -> chars char .)
    QUOTATION_MARK  reduce using rule 9 (chars -> chars char .)


state 10

    (11) char -> ESCAPE QUOTATION_MARK .

    UNESCAPED       reduce using rule 11 (char -> ESCAPE QUOTATION_MARK .)
    ESCAPE          reduce using rule 11 (char -> ESCAPE QUOTATION_MARK .)
    ELEM_SEPARATOR  reduce using rule 11 (char -> ESCAPE QUOTATION_MARK .)
    $end            reduce using rule 11 (char -> ESCAPE QUOTATION_MARK .)
    QUOTATION_MARK  reduce using rule 11 (char -> ESCAPE QUOTATION_MARK .)
    SPEC_SEPARATOR  reduce using rule 11 (char -> ESCAPE QUOTATION_MARK .)


state 11

    (13) char -> ESCAPE SPEC_SEPARATOR .

    UNESCAPED       reduce using rule 13 (char -> ESCAPE SPEC_SEPARATOR .)
    ESCAPE          reduce using rule 13 (char -> ESCAPE SPEC_SEPARATOR .)
    ELEM_SEPARATOR  reduce using rule 13 (char -> ESCAPE SPEC_SEPARATOR .)
    $end            reduce using rule 13 (char -> ESCAPE SPEC_SEPARATOR .)
    QUOTATION_MARK  reduce using rule 13 (char -> ESCAPE SPEC_SEPARATOR .)
    SPEC_SEPARATOR  reduce using rule 13 (char -> ESCAPE SPEC_SEPARATOR .)


state 12

    (12) char -> ESCAPE REVERSE_SOLIDUS .

    UNESCAPED       reduce using rule 12 (char -> ESCAPE REVERSE_SOLIDUS .)
    ESCAPE          reduce using rule 12 (char -> ESCAPE REVERSE_SOLIDUS .)
    ELEM_SEPARATOR  reduce using rule 12 (char -> ESCAPE REVERSE_SOLIDUS .)
    $end            reduce using rule 12 (char -> ESCAPE REVERSE_SOLIDUS .)
    QUOTATION_MARK  reduce using rule 12 (char -> ESCAPE REVERSE_SOLIDUS .)
    SPEC_SEPARATOR  reduce using rule 12 (char -> ESCAPE REVERSE_SOLIDUS .)


state 13

    (7) string -> QUOTATION_MARK chars . QUOTATION_MARK
    (9) chars -> chars . char
    (10) char -> . UNESCAPED
    (11) char -> . ESCAPE QUOTATION_MARK
    (12) char -> . ESCAPE REVERSE_SOLIDUS
    (13) char -> . ESCAPE SPEC_SEPARATOR

    QUOTATION_MARK  shift and go to state 17
    UNESCAPED       shift and go to state 2
    ESCAPE          shift and go to state 5

    char                           shift and go to state 9

state 14

    (2) query -> query ELEM_SEPARATOR . qelem
    (3) qelem -> . string spec_opt
    (6) string -> . chars
    (7) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (8) chars -> . char
    (9) chars -> . chars char
    (10) char -> . UNESCAPED
    (11) char -> . ESCAPE QUOTATION_MARK
    (12) char -> . ESCAPE REVERSE_SOLIDUS
    (13) char -> . ESCAPE SPEC_SEPARATOR

    QUOTATION_MARK  shift and go to state 6
    UNESCAPED       shift and go to state 2
    ESCAPE          shift and go to state 5

    qelem                          shift and go to state 18
    chars                          shift and go to state 3
    char                           shift and go to state 4
    string                         shift and go to state 8

state 15

    (5) spec_opt -> SPEC_SEPARATOR . string
    (6) string -> . chars
    (7) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (8) chars -> . char
    (9) chars -> . chars char
    (10) char -> . UNESCAPED
    (11) char -> . ESCAPE QUOTATION_MARK
    (12) char -> . ESCAPE REVERSE_SOLIDUS
    (13) char -> . ESCAPE SPEC_SEPARATOR

    QUOTATION_MARK  shift and go to state 6
    UNESCAPED       shift and go to state 2
    ESCAPE          shift and go to state 5

    char                           shift and go to state 4
    chars                          shift and go to state 3
    string                         shift and go to state 19

state 16

    (3) qelem -> string spec_opt .

    ELEM_SEPARATOR  reduce using rule 3 (qelem -> string spec_opt .)
    $end            reduce using rule 3 (qelem -> string spec_opt .)


state 17

    (7) string -> QUOTATION_MARK chars QUOTATION_MARK .

    SPEC_SEPARATOR  reduce using rule 7 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    ELEM_SEPARATOR  reduce using rule 7 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    $end            reduce using rule 7 (string -> QUOTATION_MARK chars QUOTATION_MARK .)


state 18

    (2) query -> query ELEM_SEPARATOR qelem .

    ELEM_SEPARATOR  reduce using rule 2 (query -> query ELEM_SEPARATOR qelem .)
    $end            reduce using rule 2 (query -> query ELEM_SEPARATOR qelem .)


state 19

    (5) spec_opt -> SPEC_SEPARATOR string .

    ELEM_SEPARATOR  reduce using rule 5 (spec_opt -> SPEC_SEPARATOR string .)
    $end            reduce using rule 5 (spec_opt -> SPEC_SEPARATOR string .)

